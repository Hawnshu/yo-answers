[23-02 10:31] Minzongh




Microsoft Windows [Version 10.0.19044.1288]

(c) Microsoft Corporation. All rights reserved.

 

C:\Windows\system32>cd C:\Program Files\MongoDB\Server\4.4\bin

 

C:\Program Files\MongoDB\Server\4.4\bin>mongo.exe

MongoDB shell version v4.4.1

connecting to: mongodb://127.0.0.1:27017/?compressors=disabled&gssapiServiceName=mongodb

Implicit session: session { "id" : UUID("cb5b625e-9274-4606-b625-315c5d2d8741") }

MongoDB server version: 4.4.1

Welcome to the MongoDB shell.

For interactive help, type "help".

For more comprehensive documentation, see
https://docs.mongodb.com/

Questions? Try the MongoDB Developer Community Forums
https://community.mongodb.com

---

The server generated these startup warnings when booting:

        2023-02-20T15:22:44.266+05:30: Access control is not enabled for the database. Read and write access to data and configuration is unrestricted

---

---

        Enable MongoDB's free cloud-based monitoring service, which will then receive and display

        metrics about your deployment (disk utilization, CPU, operation statistics, etc).

 

        The monitoring data will be available on a MongoDB website with a unique URL accessible to you

        and anyone you share the URL with. MongoDB may use this information to make product

        improvements and to suggest MongoDB products and deployment options to you.

 

        To enable free monitoring, run the following command: db.enableFreeMonitoring()

        To permanently disable this reminder, run the following command: db.disableFreeMonitoring()

---

> show dbs

admin   0.000GB

config  0.000GB

local   0.000GB

> use tycs

switched to db tycs

> show dbs

admin   0.000GB

config  0.000GB

local   0.000GB

> use tycs

switched to db tycs

> db.Student.insertOne({"name":"Adi","Roll Number":1});

{

        "acknowledged" : true,

        "insertedId" : ObjectId("63f6e3e37504db3064dc3b30")

}

> show dbs

admin   0.000GB

config  0.000GB

local   0.000GB

tycs    0.000GB

> db.inventory.insertMany( [

...  { item: "journal", qty: 25, size: { h: 14, w: 21, uom: "cm" }, status: "A" },

...  { item: "notebook", qty: 50, size: { h: 8.5, w: 11, uom: "in" }, status: "P" },

...  { item: "paper", qty: 100, size: { h: 8.5, w: 11, uom: "in" }, status: "D" },

...  { item: "planner", qty: 75, size: { h: 22.85, w: 30, uom: "cm" }, status: "D" },

...  { item: "postcard", qty: 45, size: { h: 10, w: 15.25, uom: "cm" }, status: "A" },

... ] );

{

        "acknowledged" : true,

        "insertedIds" : [

                ObjectId("63f6e65c7504db3064dc3b31"),

                ObjectId("63f6e65c7504db3064dc3b32"),

                ObjectId("63f6e65c7504db3064dc3b33"),

                ObjectId("63f6e65c7504db3064dc3b34"),

                ObjectId("63f6e65c7504db3064dc3b35")

        ]

}

> show dbs

admin   0.000GB

config  0.000GB

local   0.000GB

tycs    0.000GB

> show collections

Student

inventory

> db.inventory.find()

{ "_id" : ObjectId("63f6e65c7504db3064dc3b31"), "item" : "journal", "qty" : 25, "size" : { "h" : 14, "w" : 21, "uom" : "cm" }, "status" : "A" }

{ "_id" : ObjectId("63f6e65c7504db3064dc3b32"), "item" : "notebook", "qty" : 50, "size" : { "h" : 8.5, "w" : 11, "uom" : "in" }, "status" : "P" }

{ "_id" : ObjectId("63f6e65c7504db3064dc3b33"), "item" : "paper", "qty" : 100, "size" : { "h" : 8.5, "w" : 11, "uom" : "in" }, "status" : "D" }

{ "_id" : ObjectId("63f6e65c7504db3064dc3b34"), "item" : "planner", "qty" : 75, "size" : { "h" : 22.85, "w" : 30, "uom" : "cm" }, "status" : "D" }

{ "_id" : ObjectId("63f6e65c7504db3064dc3b35"), "item" : "postcard", "qty" : 45, "size" : { "h" : 10, "w" : 15.25, "uom" : "cm" }, "status" : "A" }

> db.inventory.find().pretty()

{

        "_id" : ObjectId("63f6e65c7504db3064dc3b31"),

        "item" : "journal",

        "qty" : 25,

        "size" : {

                "h" : 14,

                "w" : 21,

                "uom" : "cm"

        },

        "status" : "A"

}

{

        "_id" : ObjectId("63f6e65c7504db3064dc3b32"),

        "item" : "notebook",

        "qty" : 50,

        "size" : {

                "h" : 8.5,

                "w" : 11,

                "uom" : "in"

        },

        "status" : "P"

}

{

        "_id" : ObjectId("63f6e65c7504db3064dc3b33"),

        "item" : "paper",

        "qty" : 100,

        "size" : {

                "h" : 8.5,

                "w" : 11,

                "uom" : "in"

        },

        "status" : "D"

}

{

        "_id" : ObjectId("63f6e65c7504db3064dc3b34"),

        "item" : "planner",

        "qty" : 75,

        "size" : {

                "h" : 22.85,

                "w" : 30,

                "uom" : "cm"

        },

        "status" : "D"

}

{

        "_id" : ObjectId("63f6e65c7504db3064dc3b35"),

        "item" : "postcard",

        "qty" : 45,

        "size" : {

                "h" : 10,

                "w" : 15.25,

                "uom" : "cm"

        },

        "status" : "A"

}

> db.inventory.find({status:"A"}).pretty()

{

        "_id" : ObjectId("63f6e65c7504db3064dc3b31"),

        "item" : "journal",

        "qty" : 25,

        "size" : {

                "h" : 14,

                "w" : 21,

                "uom" : "cm"

        },

        "status" : "A"

}

{

        "_id" : ObjectId("63f6e65c7504db3064dc3b35"),

        "item" : "postcard",

        "qty" : 45,

        "size" : {

                "h" : 10,

                "w" : 15.25,

                "uom" : "cm"

        },

        "status" : "A"

}

> db.inventory.find({status:{$in:["A","D"]}}).pretty()

{

        "_id" : ObjectId("63f6e65c7504db3064dc3b31"),

        "item" : "journal",

        "qty" : 25,

        "size" : {

                "h" : 14,

                "w" : 21,

                "uom" : "cm"

        },

        "status" : "A"

}

{

        "_id" : ObjectId("63f6e65c7504db3064dc3b33"),

        "item" : "paper",

        "qty" : 100,

        "size" : {

                "h" : 8.5,

                "w" : 11,

                "uom" : "in"

        },

        "status" : "D"

}

{

        "_id" : ObjectId("63f6e65c7504db3064dc3b34"),

        "item" : "planner",

        "qty" : 75,

        "size" : {

                "h" : 22.85,

                "w" : 30,

                "uom" : "cm"

        },

        "status" : "D"

}

{

        "_id" : ObjectId("63f6e65c7504db3064dc3b35"),

        "item" : "postcard",

        "qty" : 45,

        "size" : {

                "h" : 10,

                "w" : 15.25,

                "uom" : "cm"

        },

        "status" : "A"

}

> db.inventory.find({status:"A",qty:{$lt:30}}).pretty()

{

        "_id" : ObjectId("63f6e65c7504db3064dc3b31"),

        "item" : "journal",

        "qty" : 25,

        "size" : {

                "h" : 14,

                "w" : 21,

                "uom" : "cm"

        },

        "status" : "A"

}

> db.inventory.find({status:"D",qty:{$lt:30}}).pretty()

> db.inventory.find({status:"D",qty:{$lt:100}}).pretty()

{

        "_id" : ObjectId("63f6e65c7504db3064dc3b34"),

        "item" : "planner",

        "qty" : 75,

        "size" : {

                "h" : 22.85,

                "w" : 30,

                "uom" : "cm"

        },

        "status" : "D"

}

> db.inventory.find({$or:[{status:"A"},{qty:{$lt:30}}]}).pretty()

{

        "_id" : ObjectId("63f6e65c7504db3064dc3b31"),

        "item" : "journal",

        "qty" : 25,

        "size" : {

                "h" : 14,

                "w" : 21,

                "uom" : "cm"

        },

        "status" : "A"

}

{

        "_id" : ObjectId("63f6e65c7504db3064dc3b35"),

        "item" : "postcard",

        "qty" : 45,

        "size" : {

                "h" : 10,

                "w" : 15.25,

                "uom" : "cm"

        },

        "status" : "A"

}

>







[24-02 10:48] Minzongh




Microsoft Windows [Version 10.0.19044.1288]

(c) Microsoft Corporation. All rights reserved.

 

C:\Windows\system32>cd C:\Program Files\MongoDB\Server\4.4\bin

 

C:\Program Files\MongoDB\Server\4.4\bin>mongo.exe

MongoDB shell version v4.4.1

connecting to: mongodb://127.0.0.1:27017/?compressors=disabled&gssapiServiceName=mongodb

Implicit session: session { "id" : UUID("2bbc3e2b-526a-4987-838d-e412f0c4cc98") }

MongoDB server version: 4.4.1

Welcome to the MongoDB shell.

For interactive help, type "help".

For more comprehensive documentation, see
https://docs.mongodb.com/

Questions? Try the MongoDB Developer Community Forums
https://community.mongodb.com

---

The server generated these startup warnings when booting:

        2023-02-23T16:58:59.662+05:30: ***** SERVER RESTARTED *****

        2023-02-23T16:59:03.151+05:30: Access control is not enabled for the database. Read and write access to data and configuration is unrestricted

---

---

        Enable MongoDB's free cloud-based monitoring service, which will then receive and display

        metrics about your deployment (disk utilization, CPU, operation statistics, etc).

 

        The monitoring data will be available on a MongoDB website with a unique URL accessible to you

        and anyone you share the URL with. MongoDB may use this information to make product

        improvements and to suggest MongoDB products and deployment options to you.

 

        To enable free monitoring, run the following command: db.enableFreeMonitoring()

        To permanently disable this reminder, run the following command: db.disableFreeMonitoring()

---

> show dbs

admin   0.000GB

config  0.000GB

local   0.000GB

tycs    0.000GB

> use tycs

switched to db tycs

> show collections

Student

inventory

> db.inventory.find().pretty()

{

        "_id" : ObjectId("63f6e65c7504db3064dc3b31"),

        "item" : "journal",

        "qty" : 25,

        "size" : {

                "h" : 14,

                "w" : 21,

                "uom" : "cm"

        },

        "status" : "A"

}

{

        "_id" : ObjectId("63f6e65c7504db3064dc3b32"),

        "item" : "notebook",

        "qty" : 50,

        "size" : {

                "h" : 8.5,

                "w" : 11,

                "uom" : "in"

        },

        "status" : "P"

}

{

        "_id" : ObjectId("63f6e65c7504db3064dc3b33"),

        "item" : "paper",

        "qty" : 100,

        "size" : {

                "h" : 8.5,

                "w" : 11,

                "uom" : "in"

        },

        "status" : "D"

}

{

        "_id" : ObjectId("63f6e65c7504db3064dc3b34"),

        "item" : "planner",

        "qty" : 75,

        "size" : {

                "h" : 22.85,

                "w" : 30,

                "uom" : "cm"

        },

        "status" : "D"

}

{

        "_id" : ObjectId("63f6e65c7504db3064dc3b35"),

        "item" : "postcard",

        "qty" : 45,

        "size" : {

                "h" : 10,

                "w" : 15.25,

                "uom" : "cm"

        },

        "status" : "A"

}

> db.inventory.find({status:"A",$or:[{qty:{$lt:30}},{item:/^p/}]}).pretty()

{

        "_id" : ObjectId("63f6e65c7504db3064dc3b31"),

        "item" : "journal",

        "qty" : 25,

        "size" : {

                "h" : 14,

                "w" : 21,

                "uom" : "cm"

        },

        "status" : "A"

}

{

        "_id" : ObjectId("63f6e65c7504db3064dc3b35"),

        "item" : "postcard",

        "qty" : 45,

        "size" : {

                "h" : 10,

                "w" : 15.25,

                "uom" : "cm"

        },

        "status" : "A"

}

> db.inventory.find({status:"A",qty:{$lt:30},item:/^p/}).pretty()

> db.inventory.find({status:"A",qty:{$gt:30},item:/^p/}).pretty()

{

        "_id" : ObjectId("63f6e65c7504db3064dc3b35"),

        "item" : "postcard",

        "qty" : 45,

        "size" : {

                "h" : 10,

                "w" : 15.25,

                "uom" : "cm"

        },

        "status" : "A"

}







[24-02 10:49] Minzongh




> db.inventory.update({item:"journal"},{$set : {qty:50}})

WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })

> db.inventory.find()

{ "_id" : ObjectId("63f6e65c7504db3064dc3b31"), "item" : "journal", "qty" : 50, "size" : { "h" : 14, "w" : 21, "uom" : "cm" }, "status" : "A" }

{ "_id" : ObjectId("63f6e65c7504db3064dc3b32"), "item" : "notebook", "qty" : 50, "size" : { "h" : 8.5, "w" : 11, "uom" : "in" }, "status" : "P" }

{ "_id" : ObjectId("63f6e65c7504db3064dc3b33"), "item" : "paper", "qty" : 100, "size" : { "h" : 8.5, "w" : 11, "uom" : "in" }, "status" : "D" }

{ "_id" : ObjectId("63f6e65c7504db3064dc3b34"), "item" : "planner", "qty" : 75, "size" : { "h" : 22.85, "w" : 30, "uom" : "cm" }, "status" : "D" }

{ "_id" : ObjectId("63f6e65c7504db3064dc3b35"), "item" : "postcard", "qty" : 45, "size" : { "h" : 10, "w" : 15.25, "uom" : "cm" }, "status" : "A" }

> db.inventory.find().pretty()

{

        "_id" : ObjectId("63f6e65c7504db3064dc3b31"),

        "item" : "journal",

        "qty" : 50,

        "size" : {

                "h" : 14,

                "w" : 21,

                "uom" : "cm"

        },

        "status" : "A"

}

{

        "_id" : ObjectId("63f6e65c7504db3064dc3b32"),

        "item" : "notebook",

        "qty" : 50,

        "size" : {

                "h" : 8.5,

                "w" : 11,

                "uom" : "in"

        },

        "status" : "P"

}

{

        "_id" : ObjectId("63f6e65c7504db3064dc3b33"),

        "item" : "paper",

        "qty" : 100,

        "size" : {

                "h" : 8.5,

                "w" : 11,

                "uom" : "in"

        },

        "status" : "D"

}

{

        "_id" : ObjectId("63f6e65c7504db3064dc3b34"),

        "item" : "planner",

        "qty" : 75,

        "size" : {

                "h" : 22.85,

                "w" : 30,

                "uom" : "cm"

        },

        "status" : "D"

}

{

        "_id" : ObjectId("63f6e65c7504db3064dc3b35"),

        "item" : "postcard",

        "qty" : 45,

        "size" : {

                "h" : 10,

                "w" : 15.25,

                "uom" : "cm"

        },

        "status" : "A"

}

> db.inventory.updateMany({status:"D"},{$set : {qty:30}})

{ "acknowledged" : true, "matchedCount" : 2, "modifiedCount" : 2 }

> db.inventory.find().pretty()

{

        "_id" : ObjectId("63f6e65c7504db3064dc3b31"),

        "item" : "journal",

        "qty" : 50,

        "size" : {

                "h" : 14,

                "w" : 21,

                "uom" : "cm"

        },

        "status" : "A"

}

{

        "_id" : ObjectId("63f6e65c7504db3064dc3b32"),

        "item" : "notebook",

        "qty" : 50,

        "size" : {

                "h" : 8.5,

                "w" : 11,

                "uom" : "in"

        },

        "status" : "P"

}

{

        "_id" : ObjectId("63f6e65c7504db3064dc3b33"),

        "item" : "paper",

        "qty" : 30,

        "size" : {

                "h" : 8.5,

                "w" : 11,

                "uom" : "in"

        },

        "status" : "D"

}

{

        "_id" : ObjectId("63f6e65c7504db3064dc3b34"),

        "item" : "planner",

        "qty" : 30,

        "size" : {

                "h" : 22.85,

                "w" : 30,

                "uom" : "cm"

        },

        "status" : "D"

}

{

        "_id" : ObjectId("63f6e65c7504db3064dc3b35"),

        "item" : "postcard",

        "qty" : 45,

        "size" : {

                "h" : 10,

                "w" : 15.25,

                "uom" : "cm"

        },

        "status" : "A"

}

> db.StudentNew.insertMany([

... {"_id":121,"Name":"Abdul","Marks":911},

... {"_id":122,"Name":"Atif","Marks":320},

... {"_id":123,"Name":"Akbar","Marks":699},

...

... ])

{ "acknowledged" : true, "insertedIds" : [ 121, 122, 123 ] }

> show collections

Student

StudentNew

inventory

> db.StudentNew.find().pretty()

{ "_id" : 121, "Name" : "Abdul", "Marks" : 911 }

{ "_id" : 122, "Name" : "Atif", "Marks" : 320 }

{ "_id" : 123, "Name" : "Akbar", "Marks" : 699 }

> db.StudentNew.save("_id":122,Name:"Adil",Marks:420)

uncaught exception: SyntaxError: missing ) after argument list :

@(shell):1:24

> db.StudentNew.save({"_id":122,Name:"Adil",Marks:420})

WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })

> db.StudentNew.find().pretty()

{ "_id" : 121, "Name" : "Abdul", "Marks" : 911 }

{ "_id" : 122, "Name" : "Adil", "Marks" : 420 }

{ "_id" : 123, "Name" : "Akbar", "Marks" : 699 }

> db.StudentNew.save({"_id":122,Marks:666})

WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })

> db.StudentNew.find().pretty()

{ "_id" : 121, "Name" : "Abdul", "Marks" : 911 }

{ "_id" : 122, "Marks" : 666 }

{ "_id" : 123, "Name" : "Akbar", "Marks" : 699 }

> db.StudentNew.save({"_id":122,Name:"Adil",Marks:666})

WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })

> db.StudentNew.find().pretty()

{ "_id" : 121, "Name" : "Abdul", "Marks" : 911 }

{ "_id" : 122, "Name" : "Adil", "Marks" : 666 }

{ "_id" : 123, "Name" : "Akbar", "Marks" : 699 }

> db.StudentNew.save({"_id":123,Name:"Akbar",Marks:420})

WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })

> db.StudentNew.find().pretty()

{ "_id" : 121, "Name" : "Abdul", "Marks" : 911 }

{ "_id" : 122, "Name" : "Adil", "Marks" : 666 }

{ "_id" : 123, "Name" : "Akbar", "Marks" : 420 }

> db.inventory.remove({status:"D"})

WriteResult({ "nRemoved" : 2 })

> db.inventory.find().pretty()

{

        "_id" : ObjectId("63f6e65c7504db3064dc3b31"),

        "item" : "journal",

        "qty" : 50,

        "size" : {

                "h" : 14,

                "w" : 21,

                "uom" : "cm"

        },

        "status" : "A"

}

{

        "_id" : ObjectId("63f6e65c7504db3064dc3b32"),

        "item" : "notebook",

        "qty" : 50,

        "size" : {

                "h" : 8.5,

                "w" : 11,

                "uom" : "in"

        },

        "status" : "P"

}

{

        "_id" : ObjectId("63f6e65c7504db3064dc3b35"),

        "item" : "postcard",

        "qty" : 45,

        "size" : {

                "h" : 10,

                "w" : 15.25,

                "uom" : "cm"

        },

        "status" : "A"

}

>


